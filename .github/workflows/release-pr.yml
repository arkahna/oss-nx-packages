name: pr-deployment

on:
  issue_comment:
    types: [created]

jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: '/release-pr'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: validate user
        id: validate_user
        if: ${{ steps.check.outputs.triggered == 'true' }}
        run: |
          if [[ "${AUTHOR_ASSOCIATION}" != 'MEMBER' && "${AUTHOR_ASSOCIATION}" != 'OWNER' ]]
          then
            echo "User authorization failed"
            exit 1
          else
            echo "User authorization successful"
          fi
        env:
          AUTHOR_ASSOCIATION: ${{ github.event.comment.author_association }}
      - name: check outputs
        run: echo ${{ steps.check.outputs.triggered }}

    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
      comment_body: ${{ github.event.comment.body }}

  deploy:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.1.0
        with:
          route: GET /repos/{owner}/{repository}/pulls/{issue_id}
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: create deployment
        id: create_deployment
        uses: octokit/request-action@v2.1.0
        with:
          route: POST /repos/{owner}/{repository}/deployments
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          environment: pr${{ github.event.issue.number }}
          auto_merge: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.1.0
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pr${{ github.event.issue.number }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: pull the repo.
        uses: actions/checkout@v2
        with:
          persist-credentials: true
          repository: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.repo.full_name }}

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - uses: pnpm/action-setup@v2.1.0
        with:
          version: 7
          run_install: true

      - name: pnpm install
        run: |
          pnpm install --frozen-lockfile

      - name: Configure npm
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
          cat .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Deploy pre-release
        run: |
          yarn changeset pre enter pr${{ github.event.issue.number }} || true
          yarn changeset version
          yarn release
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "Pushed pre-release"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set test status to success
        id: successful_test
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pr${{ github.event.issue.number }}
          environment_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: set test status to failure
        id: failed_test
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment: pr${{ github.event.issue.number }}
          environment_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
